        -:    0:Source:src/crypt.c
        -:    1:// FILE NAME  : crypt.c
        -:    2:// AUTHOR     : Rafael Garibotti
        -:    3:// DEVELOPERS : Rafael Garibotti
        -:    4:// E-mail     : rafael.garibotti@pucrs.br
        -:    5://-----------------------------------------------------------------------------
        -:    6:// RELEASE HISTORY
        -:    7:// VERSION   DATE         DESCRIPTION
        -:    8:// 1.0       2021-06-08   Initial version.
        -:    9://-----------------------------------------------------------------------------
        -:   10:
        -:   11:#include "crypt.h"
        -:   12:
        -:   13://-----------------------------------------------------------------------------
        -:   14:// CRYPT
        -:   15://-----------------------------------------------------------------------------
function crypt called 15 returned 100% blocks executed 100%
       15:   16:void crypt(uint32_t* key, uint32_t* input, uint8_t type, uint8_t enc_dec, uint32_t* output) {
       15:   17:  switch (type) {
       15:   17-block  0
branch  0 taken 13%
branch  1 taken 13%
branch  2 taken 13%
branch  3 taken 13%
branch  4 taken 13%
branch  5 taken 13%
branch  6 taken 13%
branch  7 taken 7%
        2:   18:    case 0  : xtea(key, input, enc_dec, output); break;
        2:   18-block  0
call    0 returned 100%
        2:   19:	case 1  : aes(key, input, type, enc_dec, output); break;
        2:   19-block  0
call    0 returned 100%
        2:   20:	case 2  : aes(key, input, type, enc_dec, output); break;
        2:   20-block  0
call    0 returned 100%
        2:   21:	case 3  : aes(key, input, type, enc_dec, output); break;
        2:   21-block  0
call    0 returned 100%
        2:   22:	case 4  : blowfish_128(key, input, type, enc_dec, output); break;
        2:   22-block  0
call    0 returned 100%
        2:   23:	case 5  : blowfish_128(key, input, type, enc_dec, output); break;
        2:   23-block  0
call    0 returned 100%
        2:   24:	case 6  : blowfish_128(key, input, type, enc_dec, output); break;
        2:   24-block  0
call    0 returned 100%
        1:   25:	default : printf("%s", "");
        1:   25-block  0
        -:   26:  }
       15:   27:}
